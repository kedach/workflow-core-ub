using System;
using System.Collections.Generic;
using System.Text;
using WorkflowCore.Extention.TOA;
using WorkflowCore.Interface;
using WorkflowCore.Models;
using WorkflowCore.Sample_TOA.Models;

namespace WorkflowCore.Extention.Primitives.TOA
{
    public class TOACalStepBody : UBStepBody
    {
        public override ExecutionResult Run(IStepExecutionContext context)
        {
            this.InitUBContext(context);
            //TOA的入口和起始点。
            UBJob lastJob = (UBJob)this.ProcInstContext.GetValue("lastJob");
            Console.WriteLine("Cal lastJobId:" + lastJob?.JobId);
            //根据上一岗位获取下一岗位列表
            IList<UBJob> nextJobList = new List<UBJob>();
            nextJobList.Add(new UBJob() { JobId = "job1", JobName = "Job1", JobConfig="xml/json"});
            nextJobList.Add(new UBJob() { JobId = "job2", JobName = "Job2", JobConfig = "xml/json" });
            this.ProcInstContext.SetValue("nextJobList", nextJobList);

            Console.WriteLine(this.Name);
            Console.WriteLine(this.ProcInstContext.Scope);
            //this.ProcInstContext.Scope = this.Name;
            if(nextJobList.Count > 0)
                return ExecutionResult.Outcome(TOAStatus.Continue);
            return ExecutionResult.Outcome(TOAStatus.End);
        }
    }
}
