using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using WorkflowCore.Extention.TOA;
using WorkflowCore.Interface;
using WorkflowCore.Models;
using WorkflowCore.Sample_TOA.Models;
using WorkflowCore.Sample_TOA.Models.Enum;
using WorkflowCore.Sample_TOA.Models.TOA;

namespace WorkflowCore.Extention.Primitives.TOA
{
    public class TOAJobsScheduleStepBody : UBStepBody
    {
        //public IEnumerable Collection { get; set; }
        public override ExecutionResult Run(IStepExecutionContext context)
        {
            this.InitUBContext(context);

            if (context.PersistenceData == null)
            {
                List<UBJob> TOANextJobQueue = (List<UBJob>)this.ProcInstContext.GetValue("NextJobQueue");
                
                var values = TOANextJobQueue.Cast<object>();

                return ExecutionResult.Branch(new List<object>(values), new IteratorPersistenceData() { ChildrenActive = true });
            }

            if (context.PersistenceData is IteratorPersistenceData persistenceData && persistenceData?.ChildrenActive == true)
            {
                if (context.Workflow.IsBranchComplete(context.ExecutionPointer.Id))
                {
                    return ExecutionResult.Next();
                }

                return ExecutionResult.Persist(persistenceData);
            }

            return ExecutionResult.Next();
        }
    }
}
